{"version":3,"sources":["utils/callHelpers.ts","hooks/useTokenBalance.ts","components/Input/Input.tsx","config/index.ts","hooks/useApprove.ts","utils/getTimePeriods.ts","hooks/useBlock.ts","hooks/useAllowance.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardDescription.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/LabelButton.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","getContract","cakeABI","getCakeAddress","call","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","balanceOf","bal","totalBurn","plus","fetchBalance","useTokenBalance","useWallet","ethereum","fastRefresh","getTokenBalance","res","StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BSC_BLOCK_TIME","useApprove","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useLotteryApprove","useCake","lotteryContract","useLottery","useIfoApprove","tokenContract","spenderAddress","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","useBlock","useContext","BlockContext","useLotteryAllowance","allowance","setAllowance","fetchAllowance","getAllowance","refreshInterval","setInterval","clearInterval","useIfoAllowance","dependency","fetch","Wrapper","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","size","variant","as","Link","to","Title","Heading","attrs","secondary","Blurb","Text","StyledHero","Hero","TranslateString","useI18n","Container","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","StyledProgress","IfoCardProgress","progress","primaryStep","StyledIfoCardDescription","Divider","borderColor","ToggleButton","button","isOpen","IfoCardDescription","defaultIsOpen","description","setIsOpen","onClick","StyledIfoCardDetails","Item","Display","IfoCardDetails","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","raisingAmount","totalAmount","href","target","rel","ml","style","display","toFixed","margin","Details","Countdown","IfoCardTime","isLoading","status","secondsUntilStart","secondsUntilEnd","block","countdownToUse","timeUntil","suffix","bold","ButtonWrapper","LabelButton","label","buttonLabel","disabled","fontSize","color","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","BalanceInput","max","symbol","onSelectMax","toLocaleString","ContributeModal","currency","contract","currencyAddress","onDismiss","setValue","pendingTx","setPendingTx","getFullDisplayBalance","title","e","currentTarget","justifyContent","fullWidth","mr","IfoCardContribute","tokenDecimals","offeringTokenBalance","setOfferingTokenBalance","claimed","userInfo","setUserInfo","contractRaisingToken","useERC20","useModal","onPresentContributeModal","getOfferingAmount","userinfo","claim","isFinished","percentOfUserContribution","console","error","getBalanceNumber","StyledIfoCard","Card","getStatus","currentBlock","startBlock","endBlock","IfoCard","ifo","id","releaseBlockNumber","blocksRemaining","startBlockNum","endBlockNum","state","setState","useIfoContract","Ribbon","variantColor","text","getRibbonComponent","Promise","all","parseInt","totalBlocks","fetchProgress","isActive","ribbon","UnlockButton","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","pt","responsive","external","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo"],"mappings":"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","file":"static/js/12.8d66a62f.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      const totalBurn = await cakeContract.methods.totalBurn().call()\r\n      setBalance(new BigNumber(bal).plus(new BigNumber(totalBurn)))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\nexport const CAKE_POOL_PID = 1\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import { useContext } from 'react'\r\nimport { BlockContext } from 'contexts/BlockContext'\r\n\r\nconst useBlock = () => {\r\n  const block: number = useContext(BlockContext)\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 39px;\r\n`\r\n\r\nconst IfoTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          Next IFO\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          Past IFOs\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default IfoTabButtons\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport Container from 'components/layout/Container'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n  margin-bottom: 32px;\r\n`\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <Container>\r\n        <Title>{TranslateString(500, 'IFO: Initial Farm Offerings')}</Title>\r\n        <Blurb>{TranslateString(502, 'Buy new tokens with a brand new token sale model.')}</Blurb>\r\n      </Container>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\r\n\r\ninterface IfoCardHeaderProps {\r\n  ifoId: string\r\n  name: string\r\n  subTitle: string\r\n}\r\n\r\nconst StyledIfoCardHeader = styled(Flex)`\r\n  & > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\r\n  margin-bottom: 4px;\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  text-align: right;\r\n`\r\n\r\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\r\n  return (\r\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\r\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\r\n      <div>\r\n        <Name>{name}</Name>\r\n        <Description>{subTitle}</Description>\r\n      </div>\r\n    </StyledIfoCardHeader>\r\n  )\r\n}\r\n\r\nexport default IfoCardHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Progress } from '@pancakeswap-libs/uikit'\r\n\r\ninterface IfoCardProgressProps {\r\n  progress: number\r\n}\r\n\r\nconst StyledProgress = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\r\n  return (\r\n    <StyledProgress>\r\n      <Progress primaryStep={progress} />\r\n    </StyledProgress>\r\n  )\r\n}\r\n\r\nexport default IfoCardProgress\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface IfoCardDescriptionProps {\r\n  defaultIsOpen?: boolean\r\n  description: string\r\n}\r\n\r\nconst StyledIfoCardDescription = styled.div`\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 90%;\r\n`\r\n\r\nconst ToggleButton = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  cursor: pointer;\r\n  display: block;\r\n  font-weight: 600;\r\n  outline: 0;\r\n  padding: 24px 16px;\r\n  width: 100%;\r\n`\r\n\r\nconst Description = styled(Text)<{ isOpen: boolean }>`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\r\n`\r\n\r\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\r\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleClick = () => setIsOpen(!isOpen)\r\n\r\n  return (\r\n    <StyledIfoCardDescription>\r\n      <Divider />\r\n      <ToggleButton onClick={handleClick}>\r\n        {isOpen ? TranslateString(999, 'Hide') : TranslateString(999, 'Show')}\r\n      </ToggleButton>\r\n      <Description isOpen={isOpen}>{description}</Description>\r\n    </StyledIfoCardDescription>\r\n  )\r\n}\r\n\r\nexport default IfoCardDescription\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, LinkExternal, Link } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface IfoCardDetailsProps {\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  raisingAmount: BigNumber\r\n  totalAmount: BigNumber\r\n}\r\n\r\nconst StyledIfoCardDetails = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Item = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  display: flex;\r\n`\r\n\r\nconst Display = styled(Text)`\r\n  flex: 1;\r\n`\r\n\r\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\r\n  launchDate,\r\n  launchTime,\r\n  saleAmount,\r\n  raiseAmount,\r\n  cakeToBurn,\r\n  projectSiteUrl,\r\n  raisingAmount,\r\n  totalAmount,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <>\r\n      <StyledIfoCardDetails>\r\n        <Item>\r\n          <Display>{TranslateString(582, 'Launch Time')}</Display>\r\n          <Text>\r\n            {launchDate},\r\n            <Link\r\n              href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\r\n              target=\"blank\"\r\n              rel=\"noopener noreferrer\"\r\n              ml=\"4px\"\r\n              style={{ display: 'inline' }}\r\n            >\r\n              {launchTime}\r\n            </Link>\r\n          </Text>\r\n        </Item>\r\n        <Item>\r\n          <Display>{TranslateString(584, 'For Sale')}</Display>\r\n          <Text>{saleAmount}</Text>\r\n        </Item>\r\n        <Item>\r\n          <Display>{TranslateString(999, 'To raise (USD)')}</Display>\r\n          <Text>{raiseAmount}</Text>\r\n        </Item>\r\n        <Item>\r\n          <Display>{TranslateString(586, 'CAKE to burn (USD)')}</Display>\r\n          <Text>{cakeToBurn}</Text>\r\n        </Item>\r\n        <Item>\r\n          <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\r\n          <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\r\n        </Item>\r\n      </StyledIfoCardDetails>\r\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\r\n        {TranslateString(412, 'View project site')}\r\n      </LinkExternal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardDetails\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link, Text } from '@pancakeswap-libs/uikit'\r\nimport { IfoStatus } from 'config/constants/types'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface IfoCardTimeProps {\r\n  isLoading: boolean\r\n  status: IfoStatus\r\n  secondsUntilStart: number\r\n  secondsUntilEnd: number\r\n  block: number\r\n}\r\n\r\nconst Details = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Countdown = styled.div`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`\r\n\r\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ isLoading, status, secondsUntilStart, secondsUntilEnd, block }) => {\r\n  const TranslateString = useI18n()\r\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\r\n  const timeUntil = getTimePeriods(countdownToUse)\r\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\r\n\r\n  if (isLoading) {\r\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\r\n  }\r\n\r\n  if (countdownToUse <= 0) {\r\n    return (\r\n      <Details>\r\n        <Text bold>{TranslateString(999, 'Finished!')}</Text>\r\n      </Details>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Details>\r\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\r\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\r\n        (blocks)\r\n      </Link>\r\n    </Details>\r\n  )\r\n}\r\n\r\nexport default IfoCardTime\r\n","import React, { ButtonHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  value: string\r\n  label?: string\r\n  buttonLabel: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: solid 1px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  border-color: ${({ theme }) => theme.colors.borderColor};\r\n  padding-left: 16px;\r\n`\r\n\r\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\r\n  return (\r\n    <div>\r\n      {label && (\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {label}\r\n        </Text>\r\n      )}\r\n      <ButtonWrapper>\r\n        <Text bold fontSize=\"20px\">\r\n          {value}\r\n        </Text>\r\n        <Button onClick={onClick} disabled={disabled}>\r\n          {buttonLabel}\r\n        </Button>\r\n      </ButtonWrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LabelButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Input, { InputProps } from './Input'\r\n\r\ninterface Props extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BalanceInput\r\n","import React, { useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\r\nimport BalanceInput from 'components/Input/BalanceInput'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface Props {\r\n  currency: string\r\n  contract: any\r\n  currencyAddress: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss }) => {\r\n  const [value, setValue] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWallet()\r\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress))\r\n\r\n  return (\r\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\r\n      <BalanceInput\r\n        value={value}\r\n        onChange={(e) => setValue(e.currentTarget.value)}\r\n        symbol={currency}\r\n        max={balance}\r\n        onSelectMax={() => setValue(balance.toString())}\r\n      />\r\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await contract.methods\r\n              .deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString())\r\n              .send({ from: account })\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </Flex>\r\n      <LinkExternal\r\n        href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\r\n        style={{ margin: 'auto' }}\r\n      >\r\n        {`Get ${currency}`}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ContributeModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useModal, Button, Text } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useIfoAllowance } from 'hooks/useAllowance'\r\nimport { useIfoApprove } from 'hooks/useApprove'\r\nimport { IfoStatus } from 'config/constants/types'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport LabelButton from './LabelButton'\r\nimport ContributeModal from './ContributeModal'\r\n\r\nexport interface Props {\r\n  address: string\r\n  currency: string\r\n  currencyAddress: string\r\n  contract: Contract\r\n  status: IfoStatus\r\n  raisingAmount: BigNumber\r\n  tokenDecimals: number\r\n}\r\n\r\nconst IfoCardContribute: React.FC<Props> = ({\r\n  address,\r\n  currency,\r\n  currencyAddress,\r\n  contract,\r\n  status,\r\n  raisingAmount,\r\n  tokenDecimals,\r\n}) => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [offeringTokenBalance, setOfferingTokenBalance] = useState(new BigNumber(0))\r\n  const [userInfo, setUserInfo] = useState({ amount: 0, claimed: false })\r\n\r\n  const { account } = useWallet()\r\n  const contractRaisingToken = useERC20(currencyAddress)\r\n  const allowance = useIfoAllowance(contractRaisingToken, address, pendingTx)\r\n  const onApprove = useIfoApprove(contractRaisingToken, address)\r\n  const [onPresentContributeModal] = useModal(\r\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\r\n  )\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const balance = new BigNumber(await contract.methods.getOfferingAmount(account).call())\r\n      const userinfo = await contract.methods.userInfo(account).call()\r\n\r\n      setUserInfo(userinfo)\r\n      setOfferingTokenBalance(balance)\r\n    }\r\n\r\n    if (account) {\r\n      fetch()\r\n    }\r\n  }, [account, contract.methods, pendingTx])\r\n\r\n  if (allowance === null) {\r\n    return null\r\n  }\r\n\r\n  const claim = async () => {\r\n    setPendingTx(true)\r\n    await contract.methods.harvest().send({ from: account })\r\n    setPendingTx(false)\r\n  }\r\n  const isFinished = status === 'finished'\r\n  const percentOfUserContribution = new BigNumber(userInfo.amount).div(raisingAmount).times(100)\r\n\r\n  if (allowance <= 0) {\r\n    return (\r\n      <Button\r\n        fullWidth\r\n        disabled={pendingTx || isFinished}\r\n        onClick={async () => {\r\n          try {\r\n            setPendingTx(true)\r\n            await onApprove()\r\n            setPendingTx(false)\r\n          } catch (e) {\r\n            setPendingTx(false)\r\n            console.error(e)\r\n          }\r\n        }}\r\n      >\r\n        Approve\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <LabelButton\r\n        disabled={pendingTx || userInfo.claimed}\r\n        buttonLabel={isFinished ? 'Claim' : 'Contribute'}\r\n        label={isFinished ? 'Your tokens to claim' : `Your contribution (${currency})`}\r\n        value={\r\n          // eslint-disable-next-line no-nested-ternary\r\n          isFinished\r\n            ? userInfo.claimed\r\n              ? 'Claimed'\r\n              : getBalanceNumber(offeringTokenBalance, tokenDecimals).toFixed(4)\r\n            : getBalanceNumber(new BigNumber(userInfo.amount)).toFixed(4)\r\n        }\r\n        onClick={isFinished ? claim : onPresentContributeModal}\r\n      />\r\n      <Text fontSize=\"14px\" color=\"textSubtle\">\r\n        {isFinished\r\n          ? `You'll be refunded any excess tokens when you claim`\r\n          : `${percentOfUserContribution.toFixed(5)}% of total`}\r\n      </Text>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardContribute\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, CardRibbon } from '@pancakeswap-libs/uikit'\r\nimport { BSC_BLOCK_TIME } from 'config'\r\nimport { Ifo, IfoStatus } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { useIfoContract } from 'hooks/useContract'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport IfoCardHeader from './IfoCardHeader'\r\nimport IfoCardProgress from './IfoCardProgress'\r\nimport IfoCardDescription from './IfoCardDescription'\r\nimport IfoCardDetails from './IfoCardDetails'\r\nimport IfoCardTime from './IfoCardTime'\r\nimport IfoCardContribute from './IfoCardContribute'\r\n\r\nexport interface IfoCardProps {\r\n  ifo: Ifo\r\n}\r\n\r\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\r\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  padding-top: 112px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 437px;\r\n  width: 100%;\r\n`\r\n\r\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus | null => {\r\n  if (currentBlock < startBlock) {\r\n    return 'coming_soon'\r\n  }\r\n\r\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\r\n    return 'live'\r\n  }\r\n\r\n  if (currentBlock > endBlock) {\r\n    return 'finished'\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\r\n  if (status === 'coming_soon') {\r\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\r\n  }\r\n\r\n  if (status === 'live') {\r\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\r\n  const {\r\n    id,\r\n    address,\r\n    name,\r\n    subTitle,\r\n    description,\r\n    launchDate,\r\n    launchTime,\r\n    saleAmount,\r\n    raiseAmount,\r\n    cakeToBurn,\r\n    projectSiteUrl,\r\n    currency,\r\n    currencyAddress,\r\n    tokenDecimals,\r\n    releaseBlockNumber,\r\n  } = ifo\r\n  const [state, setState] = useState({\r\n    isLoading: true,\r\n    status: null,\r\n    blocksRemaining: 0,\r\n    secondsUntilStart: 0,\r\n    progress: 0,\r\n    secondsUntilEnd: 0,\r\n    raisingAmount: new BigNumber(0),\r\n    totalAmount: new BigNumber(0),\r\n    startBlockNum: 0,\r\n    endBlockNum: 0,\r\n  })\r\n  const { account } = useWallet()\r\n  const contract = useIfoContract(address)\r\n\r\n  const currentBlock = useBlock()\r\n  const TranslateString = useI18n()\r\n\r\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\r\n\r\n  useEffect(() => {\r\n    const fetchProgress = async () => {\r\n      const [startBlock, endBlock, raisingAmount, totalAmount] = await Promise.all([\r\n        contract.methods.startBlock().call(),\r\n        contract.methods.endBlock().call(),\r\n        contract.methods.raisingAmount().call(),\r\n        contract.methods.totalAmount().call(),\r\n      ])\r\n\r\n      const startBlockNum = parseInt(startBlock, 10)\r\n      const endBlockNum = parseInt(endBlock, 10)\r\n\r\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\r\n      const totalBlocks = endBlockNum - startBlockNum\r\n      const blocksRemaining = endBlockNum - currentBlock\r\n\r\n      // Calculate the total progress until finished or until start\r\n      const progress =\r\n        currentBlock > startBlockNum\r\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\r\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\r\n\r\n      setState({\r\n        isLoading: false,\r\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\r\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\r\n        raisingAmount: new BigNumber(raisingAmount),\r\n        totalAmount: new BigNumber(totalAmount),\r\n        status,\r\n        progress,\r\n        blocksRemaining,\r\n        startBlockNum,\r\n        endBlockNum,\r\n      })\r\n    }\r\n\r\n    fetchProgress()\r\n  }, [currentBlock, contract, releaseBlockNumber, setState])\r\n\r\n  const isActive = state.status === 'live'\r\n  const isFinished = state.status === 'finished'\r\n\r\n  return (\r\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\r\n      <CardBody>\r\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\r\n        <IfoCardProgress progress={state.progress} />\r\n        <IfoCardTime\r\n          isLoading={state.isLoading}\r\n          status={state.status}\r\n          secondsUntilStart={state.secondsUntilStart}\r\n          secondsUntilEnd={state.secondsUntilEnd}\r\n          block={isActive || isFinished ? state.endBlockNum : state.startBlockNum}\r\n        />\r\n        {!account && <UnlockButton fullWidth />}\r\n        {(isActive || isFinished) && (\r\n          <IfoCardContribute\r\n            address={address}\r\n            currency={currency}\r\n            currencyAddress={currencyAddress}\r\n            contract={contract}\r\n            status={state.status}\r\n            raisingAmount={state.raisingAmount}\r\n            tokenDecimals={tokenDecimals}\r\n          />\r\n        )}\r\n        <IfoCardDescription description={description} />\r\n        <IfoCardDetails\r\n          launchDate={launchDate}\r\n          launchTime={launchTime}\r\n          saleAmount={saleAmount}\r\n          raiseAmount={raiseAmount}\r\n          cakeToBurn={cakeToBurn}\r\n          projectSiteUrl={projectSiteUrl}\r\n          raisingAmount={state.raisingAmount}\r\n          totalAmount={state.totalAmount}\r\n        />\r\n      </CardBody>\r\n    </StyledIfoCard>\r\n  )\r\n}\r\n\r\nexport default IfoCard\r\n","import styled from 'styled-components'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\n\r\nconst Title = styled(Heading).attrs({ size: 'lg' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 16px;\r\n`\r\n\r\nexport default Title\r\n","import styled from 'styled-components'\r\n\r\ninterface IfoCardWrapperProps {\r\n  isSingle?: boolean\r\n}\r\n\r\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\r\n  }\r\n`\r\n\r\nIfoCardWrapper.defaultProps = {\r\n  isSingle: false,\r\n}\r\n\r\nexport default IfoCardWrapper\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\r\nimport { ifosConfig } from 'config/constants'\r\nimport useI18n from 'hooks/useI18n'\r\nimport IfoCard from './components/IfoCard'\r\nimport Title from './components/Title'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst LaunchIfoCallout = styled(BaseLayout)`\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  margin: 0 auto;\r\n  padding: 32px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n\r\n  & > li {\r\n    line-height: 1.4;\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\n/**\r\n * Note: currently there should be only 1 active IFO at a time\r\n */\r\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\r\n\r\nconst Ifo = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      <IfoCards isSingle>\r\n        <IfoCard ifo={activeIfo} />\r\n      </IfoCards>\r\n      <LaunchIfoCallout>\r\n        <div>\r\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\r\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\r\n          <List>\r\n            <li>{TranslateString(596, 'Buy CAKE and BNB tokens')}</li>\r\n            <li>{TranslateString(598, 'Get CAKE-BNB LP tokens by adding CAKE and BNB liquidity')}</li>\r\n          </List>\r\n          <Flex mb=\"16px\">\r\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/swap\" mr=\"16px\">\r\n              {TranslateString(999, 'Buy cake')}\r\n            </LinkExternal>\r\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\">\r\n              {TranslateString(999, 'Get LP tokens')}\r\n            </LinkExternal>\r\n          </Flex>\r\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\r\n          <List>\r\n            <li>{TranslateString(602, 'While the sale is live, commit your CAKE-LP tokens to buy the IFO tokens')}</li>\r\n          </List>\r\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\r\n          <List>\r\n            <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\r\n            <li>{TranslateString(608, 'Done!')}</li>\r\n          </List>\r\n          <Text as=\"div\" pt=\"16px\">\r\n            <Button\r\n              as=\"a\"\r\n              variant=\"secondary\"\r\n              href=\"https://docs.pancakeswap.finance/core-products/ifo-initial-farm-offering\"\r\n            >\r\n              {TranslateString(610, 'Read more')}\r\n            </Button>\r\n          </Text>\r\n        </div>\r\n        <div>\r\n          <Image src=\"/images/ifo-bunny.svg\" alt=\"ifo bunny\" width={436} height={406} responsive />\r\n          <div>\r\n            <Title as=\"h2\">{TranslateString(512, 'Want to launch your own IFO?')}</Title>\r\n            <Text mb={3}>\r\n              {TranslateString(\r\n                514,\r\n                'Launch your project with PancakeSwap, Binance Smart Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on BSC.',\r\n              )}\r\n            </Text>\r\n            <Button\r\n              as=\"a\"\r\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\r\n              external\r\n            >\r\n              {TranslateString(516, 'Apply to launch')}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </LaunchIfoCallout>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ifo\r\n","import React from 'react'\r\nimport { ifosConfig } from 'config/constants'\r\nimport { Ifo } from 'config/constants/types'\r\nimport IfoCard from './components/IfoCard'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\r\n\r\nconst PastIfo = () => {\r\n  return (\r\n    <IfoCards>\r\n      {inactiveIfo.map((ifo) => (\r\n        <IfoCard key={ifo.id} ifo={ifo} />\r\n      ))}\r\n    </IfoCards>\r\n  )\r\n}\r\n\r\nexport default PastIfo\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport Container from 'components/layout/Container'\r\nimport IfoTabButtons from './components/IfoTabButtons'\r\nimport Hero from './components/Hero'\r\nimport CurrentIfo from './CurrentIfo'\r\nimport PastIfo from './PastIfo'\r\n\r\nconst Ifos = () => {\r\n  const { path } = useRouteMatch()\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Container>\r\n        <IfoTabButtons />\r\n        <Route exact path={`${path}`}>\r\n          <CurrentIfo />\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          <PastIfo />\r\n        </Route>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ifos\r\n"],"sourceRoot":""}