{"version":3,"sources":["utils/callHelpers.ts","hooks/useTokenBalance.ts","components/Input/Input.tsx","hooks/useApprove.ts","utils/getTimePeriods.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/Input/index.ts","hooks/useAllowance.ts","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","getContract","cakeABI","getCakeAddress","call","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","balanceOf","bal","totalBurn","plus","fetchBalance","useTokenBalance","useWallet","ethereum","fastRefresh","getTokenBalance","res","StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","useApprove","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useLotteryApprove","useCake","lotteryContract","useLottery","useIfoApprove","tokenContract","spenderAddress","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","StyledSpacer","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","Wrapper","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","useLotteryAllowance","allowance","setAllowance","fetchAllowance","getAllowance","refreshInterval","setInterval","clearInterval","useIfoAllowance","dependency","fetch","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","prevMillis","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","TranslateString","useI18n","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","fullWidth","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onSelectMax","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","random","handleSelectMax","Number","e","currentTarget","Tips","Announce","Final","WarningModal","CardActions","TicketCard","requestedApproval","setRequestedApproval","cakeBalance","ticketsLength","PurchaseWarningModal","onPresentApprove","tokenName","onPresentBuy","handleApprove","toNumber","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"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","file":"static/js/9.db5372dd.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      const totalBurn = await cakeContract.methods.totalBurn().call()\r\n      setBalance(new BigNumber(bal).plus(new BigNumber(totalBurn)))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","export { default } from './Input'\r\nexport type { InputProps } from './Input'\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { getMulticallAddress } from './addressHelpers'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (ticketIssue.toString() === issueIdex) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finanltokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finanltokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finanltokenIds.length > 200) {\r\n    finanltokenIds = finanltokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finanltokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenids = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIdex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenids.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\r\n\r\n    return claim\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return BigNumber(0)\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIdex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\r\n    return amount / 1e18 / 10\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { getLotteryStatus } from 'utils/lotteryUtils'\r\n\r\n/**\r\n * Returns whether or not the current lottery has drawn numbers\r\n *\r\n * @return {Boolean}\r\n */\r\nconst useGetLotteryHasDrawn = () => {\r\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract) {\r\n      const fetchLotteryStatus = async () => {\r\n        const state = await getLotteryStatus(lotteryContract)\r\n        setLotteryHasDrawn(state)\r\n      }\r\n\r\n      fetchLotteryStatus()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  return lotteryHasDrawn\r\n}\r\n\r\nexport default useGetLotteryHasDrawn\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [2, 14]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\r\n  let millisTimeOfNextDraw\r\n\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\n\r\nexport const getTicketSaleTime = (currentMillis): string => {\r\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\r\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getLotteryDrawTime = (currentMillis): string => {\r\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\r\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\r\n      <TopTextWrapper>\r\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\r\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\r\n        </StyledPrimaryText>\r\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\r\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\r\n        </Text>\r\n      </TopTextWrapper>\r\n      {lotteryHasDrawn && (\r\n        <BottomTextWrapper>\r\n          <Text color=\"invertedContrast\">\r\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n      )}\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{TranslateString(999, 'The CAKE Lottery')}</Title>\r\n          <Blurb>{TranslateString(999, 'Buy tickets with CAKE')}</Blurb>\r\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      setTickets(res)\r\n    }\r\n\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(new BigNumber(0))\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      setRewards(new BigNumber(res))\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setClaimLoading(true)\r\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n    setClaimAmount(claim)\r\n    setClaimLoading(false)\r\n  }, [account, lotteryContract, ticketsContract])\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\r\n\r\n  return { claimLoading, claimAmount }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      setWinningNumbers(rewards)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winngNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbaers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(999, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n              CAKE\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(999, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n          <Ticket />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTokenInput>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TicketInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\r\n  const [val, setVal] = useState('1')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\r\n  }, [max])\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const { onMultiBuy } = useMultiBuyLottery()\r\n  const maxNumber = useMaxNumber()\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const length = parseInt(val)\r\n      // @ts-ignore\r\n      // eslint-disable-next-line prefer-spread\r\n      const numbers = Array.apply(null, { length }).map(() => [\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n      ])\r\n      const txHash = await onMultiBuy('10', numbers)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > 50) {\r\n      setVal('50')\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  const cakeCosts = (amount: string): number => {\r\n    return +amount * 10\r\n  }\r\n  return (\r\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol=\"TICKET\"\r\n        availableSymbol=\"CAKE\"\r\n      />\r\n      <div>\r\n        <Tips>{TranslateString(456, 'Your amount must be a multiple of 10 CAKE')}</Tips>\r\n        <Tips>{TranslateString(458, '1 Ticket = 10 CAKE')}</Tips>\r\n      </div>\r\n      <div>\r\n        <Announce>\r\n          {TranslateString(\r\n            478,\r\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\r\n          )}\r\n        </Announce>\r\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\r\n      </div>\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          fullWidth\r\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst Final = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\nconst Announce = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: #ed4b9e;\r\n`\r\n","import React from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\r\n        <br />\r\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\r\n        <br />\r\n        {TranslateString(\r\n          474,\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button fullWidth onClick={onDismiss}>\r\n          {TranslateString(476, 'I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport { useLotteryApprove } from 'hooks/useApprove'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const { onApprove } = useLotteryApprove()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button fullWidth disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(999, 'Approve CAKE')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          fullWidth\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {lotteryHasDrawn ? (\r\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n      <CardBody>\r\n        <CardHeader>\r\n          <IconWrapper>\r\n            <TicketRound />\r\n          </IconWrapper>\r\n          {lotteryHasDrawn ? (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Until ticket sale:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n            </TicketCountWrapper>\r\n          ) : (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Your tickets for this round')}\r\n              </Text>\r\n              <Heading size=\"lg\">{ticketsLength}</Heading>\r\n            </TicketCountWrapper>\r\n          )}\r\n        </CardHeader>\r\n        <TicketActions />\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {TranslateString(999, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem marginBottom=\"20px\">\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem marginBottom=\"20px\">\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem marginBottom=\"20px\">\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <PancakeRoundIcon />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} CAKE</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRow>\r\n              <RabbitBox>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n            </RabbitRow>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst LayoutWrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: 0 auto 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  align-self: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-self: center;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\r\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\r\n        {TranslateString(999, 'How it works')}\r\n      </StyledHeading>\r\n      <Text fontSize=\"16px\">\r\n        {TranslateString(\r\n          999,\r\n          'Spend CAKE to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n        )}\r\n      </Text>\r\n      <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">Read more</StyledLink>\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard />\r\n              <TicketCard isSecondCard={isAWin} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      <HowItWorks />\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\r\n              {TranslateString(999, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\r\n          {TranslateString(999, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              Icon={TicketRound}\r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst HistoryChart: React.FC = () => {\r\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\r\n  const getDataArray = (kind) => {\r\n    return historyData\r\n      .map((dataPoint) => {\r\n        return dataPoint[kind]\r\n      })\r\n      .reverse()\r\n  }\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: getDataArray('lotteryNumber'),\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: getDataArray('poolSize'),\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: '#f5a700' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: getDataArray('burned'),\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#1FC7D4' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 14,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-pool',\r\n          ...axesStyles({ color: '#f5a700', lineHeight: 1.6 }),\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-burned',\r\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ...axesStyles({ color: '#f5a700', lineHeight: 1 }),\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {historyError && (\r\n        <InnerWrapper>\r\n          <Text>Error fetching data</Text>\r\n        </InnerWrapper>\r\n      )}\r\n      {!historyError && historyData.length > 1 ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Line data={chartData} options={options} type=\"line\" />\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 36px 0 28px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{TranslateString(999, 'Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React from 'react'\r\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{TranslateString(999, 'History')}</Heading>\r\n        <Legend />\r\n        <HistoryChart />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        <PastDrawsHistoryCard />\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (account && lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n        </Wrapper>\r\n        <Divider />\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}